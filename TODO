-----
TODOs
-----

Jason
	Classes
	defines and typedefs (see Aaron's first email 1/23/08)
	Arrays DP long term work

	Bug: Fix syntax errors that are permitted due to temp_expr stuff but are not caught
	Bug: Lots of consecutive array updates kills vc generation, but old PiVC handles them just fine (see samples/array_updates.pi).
	Fix xml-lite problems. xml-lite appears to remove sucessive \n's, and also to remove spaces at the beginning of a newline. weird.
	Server on startup should ensure yices, included.pi, etc. are there and fail if not.
	Put filename into xml and ocaml data structures.
	Bug: Remove stupid a,b counterexample nodes (look for filename field in the location)
        Update README. Especially with information about email functionality.  Also talk about coloring of things in VC pane and the inductive core.
        Figure out why we crash on compiling an empty file.
        Fix locations of nonnegative atoms (discuss with Joel)
	Add names for nonnegative nodes.


Joel
	Static analysis API
	
	Samples directory clean-up, generate official samples files that correspond to all of Aaron's previous ones.
	Termination: check, perhaps make more efficient (cache is_recursive and get_loops?, make get_fn_calls use Set and not be N^2).
	Make sure we use multiple cores for yices stuff (test it and change to fork for dp_server if necessary).
	Timeouts.
	Log server error messages.  Also add command line option to change its directory.
	Bug: tree selection after compile: selects two different steps with same text (Assert !(y=0), try Ackermann).
        Can't compile after "yices doesn't exist" error mesasge, even when yices does in fact exist

Unassigned
	Putting a function call inside a termination annotation (that is in a path) crashes.  Should we just disallow it semantically like we do calls in normal annotations?
	i and l are not distinguishable in the VC pane (when bolded and red, I think) and l and 1 are not distinguishable in the code pane.
	Investigate mysterious undo/redo code pane crash of doom.
	Should we support things like (l <= i <= u) as a convenience?
	Document the built-in predicates somewhere, probably the README.
	Remove built-in support for the length() function.

--------------------
Possible later TODOs
--------------------

Auto-indent in GUI (especially for assertions).  And maybe emacs-style tab support.
Better syntax highlighting?
Add support for warnings (:= vs =, postcondition that uses a parameter and not comparing it to rv (e.g. sorted(a, 0, |a|)))?  Asserts in Pi?
Running code/debugging.
Add an analysis that will propgate VCs?  Or maybe make it a heuristic?

